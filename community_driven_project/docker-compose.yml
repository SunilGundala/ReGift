version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:6.0
    container_name: community_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: community_platform
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - community_network

  redis:
    image: redis:7-alpine
    container_name: community_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - community_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: community_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - community_network

  # Microservices
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: community_api_gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      USER_SERVICE_URL: http://user-service:3002
      PRODUCT_SERVICE_URL: http://product-service:3003
      ORDER_SERVICE_URL: http://order-service:3004
      MEDIA_SERVICE_URL: http://media-service:3005
      NOTIFICATION_SERVICE_URL: http://notification-service:3006
      ADMIN_SERVICE_URL: http://admin-service:3007
      SPONSOR_SERVICE_URL: http://sponsor-service:3008
      ADVERTISER_SERVICE_URL: http://advertiser-service:3009
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis
      - user-service
      - product-service
      - order-service
      - media-service
      - notification-service
      - admin-service
      - sponsor-service
      - advertiser-service
    networks:
      - community_network

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: community_user_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: community_product_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: community_order_service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      PORT: 3004
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
      NOTIFICATION_SERVICE_URL: http://notification-service:3006
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - notification-service
    networks:
      - community_network

  media-service:
    build:
      context: ./services/media-service
      dockerfile: Dockerfile
    container_name: community_media_service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: development
      PORT: 3005
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
      UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 10485760
    volumes:
      - media_uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: community_notification_service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: development
      PORT: 3006
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-app-password
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  admin-service:
    build:
      context: ./services/admin-service
      dockerfile: Dockerfile
    container_name: community_admin_service
    restart: unless-stopped
    ports:
      - "3007:3007"
    environment:
      NODE_ENV: development
      PORT: 3007
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  sponsor-service:
    build:
      context: ./services/sponsor-service
      dockerfile: Dockerfile
    container_name: community_sponsor_service
    restart: unless-stopped
    ports:
      - "3008:3008"
    environment:
      NODE_ENV: development
      PORT: 3008
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  advertiser-service:
    build:
      context: ./services/advertiser-service
      dockerfile: Dockerfile
    container_name: community_advertiser_service
    restart: unless-stopped
    ports:
      - "3009:3009"
    environment:
      NODE_ENV: development
      PORT: 3009
      MONGODB_URI: mongodb://admin:password@mongodb:27017/community_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - community_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: community_frontend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_FRONTEND_URL: http://localhost:3001
    depends_on:
      - api-gateway
    networks:
      - community_network

  # Monitoring & Logging
  prometheus:
    image: prom/prometheus:latest
    container_name: community_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - community_network

  grafana:
    image: grafana/grafana:latest
    container_name: community_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - community_network

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    container_name: community_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
      - frontend
    networks:
      - community_network

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
  media_uploads:
  prometheus_data:
  grafana_data:

networks:
  community_network:
    driver: bridge 